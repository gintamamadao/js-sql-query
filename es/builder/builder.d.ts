import Insert from "./insert";
import Select from "./select";
import Update from "./update";
import Delete from "./delete";
import Replace from "./replace";
import Create from "./create";
import Alter from "./alter";
import Term from "./term";
import Func from "./func";
import Order from "./order";
import { QueryTypes, DialectTypes, WidgetTypes } from "../constant/enum";
import Execute from "../execute/execute";
import { ConnectConfig } from "../constant/interface";
declare class Builder {
    protected dialectType: DialectTypes;
    protected execute: Execute;
    queryStore: string[];
    protected queryTable: string;
    constructor(dialectType?: DialectTypes, execute?: Execute);
    insert(): Insert;
    select(): Select;
    update(): Update;
    delete(): Delete;
    replace(): Replace;
    create(): Create;
    alter(): Alter;
    readonly func: Func;
    readonly term: Term;
    readonly order: Order;
    queryInstance<T>(type: QueryTypes): T;
    widgetInstance<T>(type: WidgetTypes): T;
    protected initInstance<T>(type: QueryTypes | WidgetTypes, instance: any): T;
    table(tableName: string): this;
    build(): void;
    setConnect(config: ConnectConfig): this;
    readonly query: string | void;
    getStore(): string[];
    storeSql(query: string): void;
    isStoreEmpty(): boolean;
    cleanStoreSql(): void;
}
export default Builder;
